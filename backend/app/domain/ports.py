from typing import Protocol, Iterable
import numpy as np


class Embedder(Protocol):
    dim: int
    def encode(self, text: str) -> np.ndarray: ...
    def encode_batch(self, texts: Iterable[str]) -> np.ndarray: ...


class VectorIndex(Protocol):
    def add(self, vectors: np.ndarray) -> list[int]: ...

    def search(self,
               q_vec: np.ndarray,
               k: int = 6) -> list[tuple[int,
                                         float]]: ...

    def save(self) -> None: ...


class MetadataRepository(Protocol):
    def upsert_chunk(self, rid: int, text: str, meta: dict) -> None: ...
    def get_chunk_by_rid(self, rid: int) -> tuple[str, dict] | None: ...


class SQLEngine(Protocol):
    def register_csv(self, path: str) -> str: ...
    def safe_query(self, sql: str, limit: int = 200): ...
    def sample_preview(self, limit: int = 50): ...
